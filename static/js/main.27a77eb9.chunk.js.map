{"version":3,"sources":["components/Navigation/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","setCategories","useEffect","axios","method","url","then","responce","data","class","href","type","id","role","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAsDeA,MAlDf,WAGI,MAAoCC,mBAAS,IAA7C,mBAAmBC,GAAnB,WAYF,OATEC,qBAAW,WACXC,IAAM,CACFC,OAAQ,MACRC,IAAK,wCACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,WAExB,IAGH,qBAAKC,MAAM,gDAAX,SACA,sBAAKA,MAAM,kBAAX,UACI,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,oBACA,wBAAQD,MAAM,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,qBAAqB,gBAAc,oBAAoB,gBAAc,QAAQ,aAAW,oBAA9K,SACA,sBAAMF,MAAM,0BAEZ,qBAAKA,MAAM,2BAA2BG,GAAG,oBAAzC,SACA,qBAAIH,MAAM,aAAV,UACI,oBAAIA,MAAM,WAAV,SACA,mBAAGA,MAAM,kBAAkB,eAAa,OAAOC,KAAK,IAApD,oBAEA,oBAAID,MAAM,WAAV,SACA,mBAAGA,MAAM,WAAWC,KAAK,IAAzB,wBAEA,oBAAID,MAAM,WAAV,SACA,mBAAGA,MAAM,WAAWC,KAAK,IAAzB,uBAEA,qBAAID,MAAM,oBAAV,UACA,mBAAGA,MAAM,2BAA2BC,KAAK,IAAIE,GAAG,yBAAyBC,KAAK,SAAS,iBAAe,WAAW,gBAAc,QAA/H,2BAGA,qBAAIJ,MAAM,gBAAgB,kBAAgB,yBAA1C,UACI,6BAAI,mBAAGA,MAAM,gBAAgBC,KAAK,IAA9B,sBACJ,6BAAI,mBAAGD,MAAM,gBAAgBC,KAAK,IAA9B,8BACJ,6BAAI,mBAAGD,MAAM,gBAAgBC,KAAK,IAA9B,oDC/BLI,MATf,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.27a77eb9.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n\nfunction Navbar() {\n\n    // Объявляется пустая переменная\n    const [categories, setCategories] = useState([])\n\n    // Выполняется GET запрос на EP\n    useEffect( () => {\n    axios({\n        method: \"GET\",\n        url: \"http://127.0.0.1:8000/api/category/\"\n    }).then(responce => {\n        setCategories(responce.data)\n    })\n    }, [] )\n  \n  return ( \n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n            </li>\n            <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Features</a>\n            </li>\n            <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Pricing</a>\n            </li>\n            <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                Dropdown link\n            </a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n            </ul>\n            </li>\n        </ul>\n        </div>\n    </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navigation/Navbar';\n\nfunction App() {\n\n  return ( \n    <div className=\"App\">\n      <Navbar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}