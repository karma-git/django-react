{"version":3,"sources":["components/Navigation/Navbar.js","components/Category/CategoryDetail.js","components/Posts/PostDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","categories","setCategories","useEffect","axios","method","url","then","responce","data","className","class","href","type","id","map","c","to","pathname","fromDashboard","name","CategoryDetail","match","category","setCategory","posts","setPosts","params","post","p","title","content","PostDetail","setPost","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA6CeA,MAxCf,WAGI,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYF,OATEC,qBAAW,WACXC,IAAM,CACFC,OAAQ,MACRC,IAAK,wCACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,WAExB,IAGH,qBAAKC,UAAU,MAAf,SAEA,qBAAKC,MAAM,gDAAX,SACA,sBAAKA,MAAM,kBAAX,UACI,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,oBACA,wBAAQD,MAAM,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,sBAAsB,gBAAc,qBAAqB,gBAAc,QAAQ,aAAW,oBAAhL,SACA,sBAAMF,MAAM,0BAEZ,qBAAKA,MAAM,2BAA2BG,GAAG,qBAAzC,SACA,qBAAKH,MAAM,aAAX,SAEKV,EAAWc,KAAI,SAAAC,GAAC,OACb,cAAC,IAAD,CAAMN,UAAU,WAAWO,GAAI,CAAEC,SAAS,aAAD,OAAeF,EAAEF,IAAMK,eAAc,GAA9E,SAAwFH,EAAEI,sBCK3FC,MAlCf,YAAoC,IAAVC,EAAS,EAATA,MAEtB,EAAgCtB,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KACA,EAA0BxB,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcC,EAAd,KACMZ,EAAKQ,EAAMK,OAAOb,GAWxB,OATAX,qBAAW,WACPC,IAAM,CACFC,OAAQ,MACRC,IAAI,sCAAD,OAAwCQ,EAAxC,OACJP,MAAK,SAAAC,GACJgB,EAAYhB,EAASC,MACrBiB,EAASlB,EAASC,KAAKmB,WAExB,CAACd,IAEJ,oDACsBS,EAAST,GAC3B,2CAAa,iCAASS,EAASH,UAC/B,uBACA,qBAAKT,MAAM,MAAX,SACGc,EAAMV,KAAI,SAAAc,GAEAA,EAAEC,MACHD,EAAEE,QACFF,EAAEf,GACL,IAAoB,SAAD,OAAWe,EAAEf,IAJJe,EAAEf,YCDpCkB,MArBf,YAAgC,IAAVV,EAAS,EAATA,MAElB,EAAwBtB,mBAAS,IAAjC,mBAAO4B,EAAP,KAAaK,EAAb,KACMnB,EAAKQ,EAAMK,OAAOb,GAUxB,OARAX,qBAAW,WACPC,IAAM,CACFC,OAAQ,MACRC,IAAI,sCAAD,OAAwCQ,EAAxC,OACJP,MAAK,SAAAC,GACJyB,EAAQzB,EAASC,WAElB,CAACK,IAEJ,gDACkBc,EAAKd,GACnB,uCAAS,iCAASc,EAAKR,c,OCCpBc,MAff,WAEE,OACE,qBAAKxB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,KAAK,aAAaC,OAAK,EAACC,UAAWL,IAC1C,cAAC,IAAD,CAAOG,KAAK,iBAAiBC,OAAK,EAACC,UAAWhB,aCFzCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.74b1fb1e.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n\n    // Объявляется пустая переменная\n    const [categories, setCategories] = useState([])\n\n    // Выполняется GET запрос на EP\n    useEffect( () => {\n    axios({\n        method: \"GET\",\n        url: \"http://127.0.0.1:8000/api/category/\"\n    }).then(responce => {\n        setCategories(responce.data)\n    })\n    }, [] )\n  \n  return ( \n    <div className=\"App\">\n\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div class=\"navbar-nav\">\n            \n            {categories.map(c=>(\n                <Link className=\"nav-link\" to={{ pathname: `/category/${c.id}`, fromDashboard:false }}>{c.name}</Link>\n            ))}\n            \n        </div>\n        </div>\n    </div>\n    </nav>\n      \n    </div>\n  );\n}\n\nexport default Navbar;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CategoryDetail({ match }) {\n    \n    const [category, setCategory] = useState([])\n    const [posts, setPosts] = useState([])\n    const id = match.params.id\n\n    useEffect( () => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/category/${id}/`\n        }).then(responce => {\n            setCategory(responce.data)\n            setPosts(responce.data.post)\n        })\n        }, [id] )\n    return (\n        <div>\n            Category with id {category.id}\n            <p>Category: <strong>{category.name}</strong></p>\n            <hr/>\n            <div class=\"row\">\n              {posts.map(p => {\n                  <div className=\"col-md-4\" key={p.id}>\n                    <h4>{p.title}</h4>\n                    <p>{p.content}</p>\n                    <p>{p.id}</p>\n                    <Link to={{ pathname: `/post/${p.id}`, fromDashboard:false }}>Детали</Link>\n                  </div>\n              })}\n            </div>\n        </div>\n    )\n}\n\nexport default CategoryDetail;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction PostDetail({ match }) {\n    \n    const [post, setPost] = useState([])\n    const id = match.params.id\n\n    useEffect( () => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/blogpost/${id}/`\n        }).then(responce => {\n            setPost(responce.data)\n        })\n        }, [id] )\n    return (\n        <div>\n            Post with id {post.id}\n            <p>Post: <strong>{post.name}</strong></p>\n        </div>\n    )\n}\n\nexport default PostDetail;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navigation/Navbar';\nimport CategoryDetail from './components/Category/CategoryDetail';\nimport PostDetail from './components/Posts/PostDetail';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n\n  return ( \n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/post/:id/\" exact component={PostDetail}></Route>\n          <Route path=\"/category/:id/\" exact component={CategoryDetail}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}